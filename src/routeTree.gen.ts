/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ScheduleRouteImport } from './routes/schedule'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ClanRouteImport } from './routes/clan'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GameSlugRouteImport } from './routes/game.$slug'

const ScheduleRoute = ScheduleRouteImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ClanRoute = ClanRouteImport.update({
  id: '/clan',
  path: '/clan',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GameSlugRoute = GameSlugRouteImport.update({
  id: '/game/$slug',
  path: '/game/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/clan': typeof ClanRoute
  '/login': typeof LoginRoute
  '/schedule': typeof ScheduleRoute
  '/game/$slug': typeof GameSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/clan': typeof ClanRoute
  '/login': typeof LoginRoute
  '/schedule': typeof ScheduleRoute
  '/game/$slug': typeof GameSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/clan': typeof ClanRoute
  '/login': typeof LoginRoute
  '/schedule': typeof ScheduleRoute
  '/game/$slug': typeof GameSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/clan' | '/login' | '/schedule' | '/game/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/clan' | '/login' | '/schedule' | '/game/$slug'
  id: '__root__' | '/' | '/clan' | '/login' | '/schedule' | '/game/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ClanRoute: typeof ClanRoute
  LoginRoute: typeof LoginRoute
  ScheduleRoute: typeof ScheduleRoute
  GameSlugRoute: typeof GameSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/schedule': {
      id: '/schedule'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof ScheduleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clan': {
      id: '/clan'
      path: '/clan'
      fullPath: '/clan'
      preLoaderRoute: typeof ClanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/game/$slug': {
      id: '/game/$slug'
      path: '/game/$slug'
      fullPath: '/game/$slug'
      preLoaderRoute: typeof GameSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ClanRoute: ClanRoute,
  LoginRoute: LoginRoute,
  ScheduleRoute: ScheduleRoute,
  GameSlugRoute: GameSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
